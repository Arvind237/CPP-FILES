
#include <bits/stdc++.h>
using namespace std;
int maxsubsum(vector <int> a,int n)
{
    int sum=0;
    int maxisum=INT_MIN;
    for(int i=0;i<n;i++)
    {
        sum+=a[i];
        maxisum=max(sum,maxisum);
        if(sum<0)
        {
            sum=0;
        }
    }
    return maxisum;
}
int main() {
    vector <int > v={-2,1,-3,4,-1,2,1,3,-5,6};
    int n=v.size();
    cout<<maxsubsum(v,n);
    return 0;
}

It's extended version


#include <bits/stdc++.h>
using namespace std;
void maxsubsum(vector <int> a,int n)
{
    int sum=0;
    int maxisum=INT_MIN;
    int start;
    int stindex,endindex;
    for(int i=0;i<n;i++)
    {
        if(sum==0)
        {
            start=i;
        }
        sum+=a[i];
        if(sum>maxisum)
        {
            maxisum=sum;
            stindex=start;
            endindex=i;
        }
        if(sum<0)
        {
            sum=0;
        }
    }
    for(int i=stindex;i<=endindex;i++)
    {
        cout<<a[i]<<" ";
    }
   
}
int main() {
    vector <int > v={-2,1,-3,4,-1,2,1,3,-5,6};
    int n=v.size();
    maxsubsum(v,n);
    return 0;
}